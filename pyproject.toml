[project]
name = "apat"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "fastapi>=0.115.0",
    "pydantic>=2.9.2",
    "pydantic-settings>=2.5.2",
    "uvicorn>=0.31.0",
    "alembic>=1.13.3",
    "attrs>=24.2.0",
    "passlib>=1.7.4",
    "uvloop>=0.20.0",
    "httptools>=0.6.1",
    "click>=8.1.7",
    "rich>=13.9.2",
    "pyjwt[crypto]>=2.9.0",
    "httpx>=0.27.2",
    "aiosmtplib>=3.0.2",
    "jinja2>=3.1.4",
    "sqlalchemy[asyncio]>=2.0.35",
    "asyncpg>=0.30.0",
    "python-multipart>=0.0.20",
    "stripe>=11.4.1",
]

[tool.uv]
dev-dependencies = [
    "anyio>=4.6.0",
    "ipdb>=0.13.13",
    "ipython>=8.28.0",
    "pytest>=8.3.3",
    "pytest-pretty>=1.2.0",
    "ruff>=0.6.9",
    "pytest-mock>=3.14.0",
    "pytest-cov>=5.0.0",
    "mypy[faster-cache]>=1.13.0",
    "types-passlib>=1.7.7.20240819",
    "pytest-randomly>=3.16.0",
    "polyfactory>=2.18.1",
    "ipykernel>=6.29.5",
    "catppuccin[pygments]>=2.3.4",
]

[tool.hatch.build.targets.wheel]
packages = ["src/apat", "tests"]

[project.scripts]
apat = "apat.cli.main:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"


# Tool configuration

## Pytest configuration

[tool.pytest.ini_options]

## Coverage configuration

[tool.coverage.run]
source_pkgs = ["apat"]
branch = true
parallel = true

[tool.coverage.paths]
apat = ["src/apat"]

[tool.coverage.report]
exclude_also = [
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
omit = ["*/__about__.py", "*/__main__.py", "*/cli/__init__.py"]
fail_under = 80

## Ruff configuration

[tool.ruff]
exclude = ["etc/alembic"]
line-length = 88
target-version = "py313"

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = 80

[tool.ruff.lint]
select = ["E", "F", "G", "I", "N", "Q", "UP", "C90", "T20", "TID"]
exclude = ["E702"]
unfixable = ["UP007"] # typer does not handle PEP604 annotations

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.isort]
known-first-party = ["apat"]

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false

## Types configuration

[tool.mypy]
python_version = "3.13"
files = "src/**/*.py"
exclude = ["^tests/", "^etc/", "^src/old/"]
plugins = [
    "pydantic.mypy"
]
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_reexport = true
disallow_untyped_defs = true
strict = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true
